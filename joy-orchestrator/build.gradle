plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.palantir.docker' version '0.35.0'
}

group = 'com.joy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}



dependencies {
	implementation(project(":joy-common"))
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.1'
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations:2.18.2'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel"){}

docker {
	println(tasks.bootJar.outputs.files)
	name rootProject.name+'-'+project.name + ":" + version
	dockerfile file('../Dockerfile')
	files tasks.bootJar.outputs.files
	buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}
