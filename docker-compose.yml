services:
  joy-zookeeper:
    container_name: joy-zookeeper
    image: 'arm64v8/zookeeper:3.8'
    networks:
      - joy_network
    ports:
      - '2182:2182'
    environment:
      - ZOO_SERVERS=server.1=joy-zookeeper:2889:3889;2182
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none
  joy-kafka:
    image: 'docker.io/bitnami/kafka:3.5'
    container_name: joy-kafka
    hostname: joy-kafka
    networks:
      - joy_network
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=joy-zookeeper:2182
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=LC://:29093,LX://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://joy-kafka:29093,LX://${DOCKER_HOST_IP:-localhost}:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
    depends_on:
      - joy-zookeeper
  joy-kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: joy-kafka-ui
    networks:
      - joy_network
    ports:
      - "8990:8080"
    restart: always
    depends_on:
      - joy-kafka
      - joy-zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=joy-kafka:29093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=joy-zookeeper:2182
  mysql2:
    image: mysql/mysql-server:8.0
    networks:
      - joy_network
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'member'
      TZ: Asia/Seoul
    ports:
      - '3308:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
  joy-redis:
    image: redis:latest
    networks:
      - joy_network
    ports:
      - 6380:6379
    platform: linux/x86_64
    restart: always
  joy-order:
    image: joy-store-joy-order:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8084:8084"
    depends_on:
      - mysql2
      - joy-redis
      - joy-kafka
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  joy-item:
    image: joy-store-joy-item:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8085:8085"
    depends_on:
      - mysql2
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  joy-coupon:
    image: joy-store-joy-coupon:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8086:8086"
    depends_on:
      - mysql2
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  joy-api:
    image: joy-store-joy-api:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8081:8081"
    depends_on:
      - mysql2
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  joy-ui:
    image: joy-store-joy-ui:0.0.1-SNAPSHOT
    networks:
      - joy_network
      - haru_haru_network
    ports:
      - "8082:8082"
    depends_on:
      - mysql2
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  logging-consumer:
    image: joy-store-logging-consumer:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8088:8080"
    depends_on:
      - mysql2
      - joy-kafka
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  ad:
    image: joy-store-joy-ad:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8092:8092"
    depends_on:
      - mysql2
      - joy-kafka
      - joy-auth
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  joy-auth:
    image: joy-store-joy-auth:0.0.1-SNAPSHOT
    networks:
      - joy_network
    ports:
      - "8080:8080"
    depends_on:
      - mysql2
      - joy-kafka
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
networks:
  joy_network:
    driver: bridge
  haru_haru_network:
    external: true